// <auto-generated />
using System;
using Gerenciamento.Informacoes.ESocial.Infra.Sql.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gerenciamento.Informacoes.ESocial.Infra.Sql.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250902233505_CreatingFirstMigration")]
    partial class CreatingFirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gerenciamento.Informacoes.ESocial.Dominio.Entidades.Cedido", b =>
                {
                    b.Property<int>("CedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CedidoId"));

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("CnpjEmpregadoCedido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAdmissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("MatriculaTrabalhador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OnusCessReqId")
                        .HasColumnType("int");

                    b.Property<int>("TipoRegPrev")
                        .HasColumnType("int");

                    b.Property<int>("TipoRegTrab")
                        .HasColumnType("int");

                    b.Property<int>("TrabalhadorId")
                        .HasColumnType("int");

                    b.HasKey("CedidoId");

                    b.HasIndex("TrabalhadorId");

                    b.ToTable("Cedidos");
                });

            modelBuilder.Entity("Gerenciamento.Informacoes.ESocial.Dominio.Entidades.Dependente", b =>
                {
                    b.Property<int>("DependenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DependenteId"));

                    b.Property<string>("CpfDependente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EhDepIncapaFisMentTrab")
                        .HasColumnType("bit");

                    b.Property<bool>("EhDepTrabalhadorIrrf")
                        .HasColumnType("bit");

                    b.Property<bool>("EhDependentePensao")
                        .HasColumnType("bit");

                    b.Property<string>("NomeDependente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneResponsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDependente")
                        .HasColumnType("int");

                    b.Property<int>("TrabalhadorId")
                        .HasColumnType("int");

                    b.HasKey("DependenteId");

                    b.HasIndex("TrabalhadorId");

                    b.ToTable("Dependentes");
                });

            modelBuilder.Entity("Gerenciamento.Informacoes.ESocial.Dominio.Entidades.Estagiario", b =>
                {
                    b.Property<int>("EstagiarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstagiarioId"));

                    b.Property<int?>("AreaAtuacaoId")
                        .HasColumnType("int");

                    b.Property<string>("CnpjInstEnsino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NaturezaEstagio")
                        .HasColumnType("int");

                    b.Property<string>("NomeSupervisor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazaoSocialInstEnsino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrabalhadorId")
                        .HasColumnType("int");

                    b.HasKey("EstagiarioId");

                    b.HasIndex("TrabalhadorId");

                    b.ToTable("Estagiarios");
                });

            modelBuilder.Entity("Gerenciamento.Informacoes.ESocial.Dominio.Entidades.Trabalhador", b =>
                {
                    b.Property<int>("TrabalhadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrabalhadorId"));

                    b.Property<string>("CodigoNomeTravTrans")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstadoCivilId")
                        .HasColumnType("int");

                    b.Property<int>("GrauInstrucaoId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPrimeiroEmprego")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerificado")
                        .HasColumnType("bit");

                    b.Property<int>("MunicipioNascimentoId")
                        .HasColumnType("int");

                    b.Property<int>("NacionalidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeMae")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisNascimentoId")
                        .HasColumnType("int");

                    b.Property<int>("RacaCorId")
                        .HasColumnType("int");

                    b.Property<bool>("RecebeBeneficioPrevidencia")
                        .HasColumnType("bit");

                    b.Property<int>("SexoId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("UfNascimento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrabalhadorId");

                    b.ToTable("Trabalhadores");
                });

            modelBuilder.Entity("Mpce.ECensoSocial.Domain.Domain.Entities.Arquivo", b =>
                {
                    b.Property<int>("ArquivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArquivoId"));

                    b.Property<string>("NomeArquivo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TrabalhadorId")
                        .HasColumnType("int");

                    b.HasKey("ArquivoId");

                    b.HasIndex("TrabalhadorId");

                    b.ToTable("Arquivos");
                });

            modelBuilder.Entity("Gerenciamento.Informacoes.ESocial.Dominio.Entidades.Cedido", b =>
                {
                    b.HasOne("Gerenciamento.Informacoes.ESocial.Dominio.Entidades.Trabalhador", "Trabalhador")
                        .WithMany("Cedidos")
                        .HasForeignKey("TrabalhadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trabalhador");
                });

            modelBuilder.Entity("Gerenciamento.Informacoes.ESocial.Dominio.Entidades.Dependente", b =>
                {
                    b.HasOne("Gerenciamento.Informacoes.ESocial.Dominio.Entidades.Trabalhador", "Trabalhador")
                        .WithMany("Dependentes")
                        .HasForeignKey("TrabalhadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trabalhador");
                });

            modelBuilder.Entity("Gerenciamento.Informacoes.ESocial.Dominio.Entidades.Estagiario", b =>
                {
                    b.HasOne("Gerenciamento.Informacoes.ESocial.Dominio.Entidades.Trabalhador", "Trabalhador")
                        .WithMany("Estagiarios")
                        .HasForeignKey("TrabalhadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Gerenciamento.Informacoes.ESocial.Dominio.ObjetosValor.Endereco", "EnderecoInstEnsino", b1 =>
                        {
                            b1.Property<int>("EstagiarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Bairro")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CEP")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Complemento")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<string>("Logradouro")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("MunicipioId")
                                .HasColumnType("int");

                            b1.Property<string>("Numero")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("TipoLogradouro")
                                .HasColumnType("int");

                            b1.Property<string>("Uf")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("EstagiarioId");

                            b1.ToTable("Estagiarios");

                            b1.WithOwner()
                                .HasForeignKey("EstagiarioId");
                        });

                    b.Navigation("EnderecoInstEnsino");

                    b.Navigation("Trabalhador");
                });

            modelBuilder.Entity("Gerenciamento.Informacoes.ESocial.Dominio.Entidades.Trabalhador", b =>
                {
                    b.OwnsOne("Gerenciamento.Informacoes.ESocial.Dominio.ObjetosValor.Endereco", "EnderecoResidencial", b1 =>
                        {
                            b1.Property<int>("TrabalhadorId")
                                .HasColumnType("int");

                            b1.Property<string>("Bairro")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CEP")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Complemento")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<string>("Logradouro")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("MunicipioId")
                                .HasColumnType("int");

                            b1.Property<string>("Numero")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("TipoLogradouro")
                                .HasColumnType("int");

                            b1.Property<string>("Uf")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TrabalhadorId");

                            b1.ToTable("Trabalhadores");

                            b1.WithOwner()
                                .HasForeignKey("TrabalhadorId");
                        });

                    b.OwnsOne("Gerenciamento.Informacoes.ESocial.Dominio.ObjetosValor.Contato", "Contato", b1 =>
                        {
                            b1.Property<int>("TrabalhadorId")
                                .HasColumnType("int");

                            b1.Property<string>("Email1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Email2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Telefone1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Telefone2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("sDescricao")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TrabalhadorId");

                            b1.ToTable("Trabalhadores");

                            b1.WithOwner()
                                .HasForeignKey("TrabalhadorId");
                        });

                    b.OwnsOne("Gerenciamento.Informacoes.ESocial.Dominio.ObjetosValor.Deficiencia", "DadosDeficiencia", b1 =>
                        {
                            b1.Property<int>("TrabalhadorId")
                                .HasColumnType("int");

                            b1.Property<bool>("TemDeficienciaAuditiva")
                                .HasColumnType("bit");

                            b1.Property<bool>("TemDeficienciaFisica")
                                .HasColumnType("bit");

                            b1.Property<bool>("TemDeficienciaIntelectual")
                                .HasColumnType("bit");

                            b1.Property<bool>("TemDeficienciaMental")
                                .HasColumnType("bit");

                            b1.Property<bool>("TemDeficienciaVisual")
                                .HasColumnType("bit");

                            b1.HasKey("TrabalhadorId");

                            b1.ToTable("Trabalhadores");

                            b1.WithOwner()
                                .HasForeignKey("TrabalhadorId");
                        });

                    b.OwnsOne("Gerenciamento.Informacoes.ESocial.Dominio.ObjetosValor.Documento", "DocumentosPessoais", b1 =>
                        {
                            b1.Property<int>("TrabalhadorId")
                                .HasColumnType("int");

                            b1.Property<int?>("CategoriaCnhId")
                                .HasColumnType("int");

                            b1.Property<string>("Cpf")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("DataExpedOc")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("DataExpedicaoCnh")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("DataExpedicaoRg")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("DataPrimeiraHabilitacao")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("DataValidadeCnh")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("DataValidadeOc")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EmissaoOc")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EmissaoRg")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("NisPisPasep")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("NumeroCnh")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("NumeroCtps")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("NumeroRegistroOc")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("NumeroRg")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("NumeroSerieCtps")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UfCnh")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UfCtps")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TrabalhadorId");

                            b1.ToTable("Trabalhadores");

                            b1.WithOwner()
                                .HasForeignKey("TrabalhadorId");
                        });

                    b.Navigation("Contato");

                    b.Navigation("DadosDeficiencia");

                    b.Navigation("DocumentosPessoais");

                    b.Navigation("EnderecoResidencial");
                });

            modelBuilder.Entity("Mpce.ECensoSocial.Domain.Domain.Entities.Arquivo", b =>
                {
                    b.HasOne("Gerenciamento.Informacoes.ESocial.Dominio.Entidades.Trabalhador", null)
                        .WithMany()
                        .HasForeignKey("TrabalhadorId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Gerenciamento.Informacoes.ESocial.Dominio.Entidades.Trabalhador", b =>
                {
                    b.Navigation("Cedidos");

                    b.Navigation("Dependentes");

                    b.Navigation("Estagiarios");
                });
#pragma warning restore 612, 618
        }
    }
}
